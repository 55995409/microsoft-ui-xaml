// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "FormRow.h"

CppWinRTActivatableClassWithDPFactory(FormRow)

GlobalDependencyProperty FormRowProperties::s_LengthProperty{ nullptr };

FormRowProperties::FormRowProperties()
{
    EnsureProperties();
}

void FormRowProperties::EnsureProperties()
{
    if (!s_LengthProperty)
    {
        s_LengthProperty =
            InitializeDependencyProperty(
                L"Length",
                winrt::name_of<winrt::GridLength>(),
                winrt::name_of<winrt::FormRow>(),
                true /* isAttached */,
                ValueHelper<winrt::GridLength>::BoxValueIfNecessary(FormRow::s_defaultLength),
                &FormRow::OnLengthPropertyChanged);
    }
}

void FormRowProperties::ClearProperties()
{
    s_LengthProperty = nullptr;
}

void FormRowProperties::OnPropertyChanged(
    winrt::DependencyObject const& sender,
    winrt::DependencyPropertyChangedEventArgs const& args)
{
    auto owner = sender.as<winrt::FormRow>();
    winrt::get_self<FormRow>(owner)->OnPropertyChanged(args);
}

void FormRowProperties::SetLength(winrt::UIElement const& target, winrt::GridLength const& value)
{
    target.SetValue(s_LengthProperty, ValueHelper<winrt::GridLength>::BoxValueIfNecessary(value));
}

winrt::GridLength FormRowProperties::GetLength(winrt::UIElement const& target)
{
    return ValueHelper<winrt::GridLength>::CastOrUnbox(target.GetValue(s_LengthProperty));
}
