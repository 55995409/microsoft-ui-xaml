// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "Forms.h"

CppWinRTActivatableClassWithDPFactory(Forms)

GlobalDependencyProperty FormsProperties::s_SectionsProperty{ nullptr };

FormsProperties::FormsProperties()
{
    EnsureProperties();
}

void FormsProperties::EnsureProperties()
{
    if (!s_SectionsProperty)
    {
        s_SectionsProperty =
            InitializeDependencyProperty(
                L"Sections",
                winrt::name_of<winrt::IVector<winrt::MenuFlyoutItemBase>>(),
                winrt::name_of<winrt::Forms>(),
                false /* isAttached */,
                ValueHelper<winrt::IVector<winrt::MenuFlyoutItemBase>>::BoxedDefaultValue(),
                winrt::PropertyChangedCallback(&OnPropertyChanged));
    }
}

void FormsProperties::ClearProperties()
{
    s_SectionsProperty = nullptr;
}

void FormsProperties::OnPropertyChanged(
    winrt::DependencyObject const& sender,
    winrt::DependencyPropertyChangedEventArgs const& args)
{
    auto owner = sender.as<winrt::Forms>();
    winrt::get_self<Forms>(owner)->OnPropertyChanged(args);
}

void FormsProperties::Sections(winrt::IVector<winrt::MenuFlyoutItemBase> const& value)
{
    static_cast<Forms*>(this)->SetValue(s_SectionsProperty, ValueHelper<winrt::IVector<winrt::MenuFlyoutItemBase>>::BoxValueIfNecessary(value));
}

winrt::IVector<winrt::MenuFlyoutItemBase> FormsProperties::Sections()
{
    return ValueHelper<winrt::IVector<winrt::MenuFlyoutItemBase>>::CastOrUnbox(static_cast<Forms*>(this)->GetValue(s_SectionsProperty));
}
