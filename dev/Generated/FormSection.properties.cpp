// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "FormSection.h"

CppWinRTActivatableClassWithDPFactory(FormSection)

GlobalDependencyProperty FormSectionProperties::s_ColumnsProperty{ nullptr };
GlobalDependencyProperty FormSectionProperties::s_HeaderProperty{ nullptr };
GlobalDependencyProperty FormSectionProperties::s_ItemsProperty{ nullptr };

FormSectionProperties::FormSectionProperties()
{
    EnsureProperties();
}

void FormSectionProperties::EnsureProperties()
{
    if (!s_ColumnsProperty)
    {
        s_ColumnsProperty =
            InitializeDependencyProperty(
                L"Columns",
                winrt::name_of<int>(),
                winrt::name_of<winrt::FormSection>(),
                false /* isAttached */,
                ValueHelper<int>::BoxValueIfNecessary(1),
                winrt::PropertyChangedCallback(&OnPropertyChanged));
    }
    if (!s_HeaderProperty)
    {
        s_HeaderProperty =
            InitializeDependencyProperty(
                L"Header",
                winrt::name_of<winrt::hstring>(),
                winrt::name_of<winrt::FormSection>(),
                false /* isAttached */,
                ValueHelper<winrt::hstring>::BoxedDefaultValue(),
                winrt::PropertyChangedCallback(&OnPropertyChanged));
    }
    if (!s_ItemsProperty)
    {
        s_ItemsProperty =
            InitializeDependencyProperty(
                L"Items",
                winrt::name_of<winrt::IVector<winrt::FrameworkElement>>(),
                winrt::name_of<winrt::FormSection>(),
                false /* isAttached */,
                ValueHelper<winrt::IVector<winrt::FrameworkElement>>::BoxedDefaultValue(),
                winrt::PropertyChangedCallback(&OnPropertyChanged));
    }
}

void FormSectionProperties::ClearProperties()
{
    s_ColumnsProperty = nullptr;
    s_HeaderProperty = nullptr;
    s_ItemsProperty = nullptr;
}

void FormSectionProperties::OnPropertyChanged(
    winrt::DependencyObject const& sender,
    winrt::DependencyPropertyChangedEventArgs const& args)
{
    auto owner = sender.as<winrt::FormSection>();
    winrt::get_self<FormSection>(owner)->OnPropertyChanged(args);
}

void FormSectionProperties::Columns(int value)
{
    static_cast<FormSection*>(this)->SetValue(s_ColumnsProperty, ValueHelper<int>::BoxValueIfNecessary(value));
}

int FormSectionProperties::Columns()
{
    return ValueHelper<int>::CastOrUnbox(static_cast<FormSection*>(this)->GetValue(s_ColumnsProperty));
}

void FormSectionProperties::Header(winrt::hstring const& value)
{
    static_cast<FormSection*>(this)->SetValue(s_HeaderProperty, ValueHelper<winrt::hstring>::BoxValueIfNecessary(value));
}

winrt::hstring FormSectionProperties::Header()
{
    return ValueHelper<winrt::hstring>::CastOrUnbox(static_cast<FormSection*>(this)->GetValue(s_HeaderProperty));
}

void FormSectionProperties::Items(winrt::IVector<winrt::FrameworkElement> const& value)
{
    static_cast<FormSection*>(this)->SetValue(s_ItemsProperty, ValueHelper<winrt::IVector<winrt::FrameworkElement>>::BoxValueIfNecessary(value));
}

winrt::IVector<winrt::FrameworkElement> FormSectionProperties::Items()
{
    return ValueHelper<winrt::IVector<winrt::FrameworkElement>>::CastOrUnbox(static_cast<FormSection*>(this)->GetValue(s_ItemsProperty));
}
