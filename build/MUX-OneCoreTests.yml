name: $(BuildDefinitionName)_$(date:yyMM).$(date:dd)$(rev:rrr)
jobs:
- job: ComponentDetection
  pool:
    vmImage: 'VS2017-Win2016'

  steps:
  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'

- job: Build
  # Skip the build job if we are reusing the output of a previous build.
  # useBuildOutputFromBuildId variable is set on the Pipeline at Queue time.
  condition:
    eq(variables['useBuildOutputFromBuildId'],'') 
  pool:
    vmImage: 'VS2017-Win2016'
  timeoutInMinutes: 120
  strategy:
    maxParallel: 10
    matrix:
      Release_x86:
        buildPlatform: 'x86'
        buildConfiguration: 'Release'
      Release_x64:
        buildPlatform: 'x64'
        buildConfiguration: 'Release'
      Release_Arm:
        buildPlatform: 'arm'
        buildConfiguration: 'Release'
      Release_Arm64:
        buildPlatform: 'arm64'
        buildConfiguration: 'Release'

  variables:
    appxPackageDir : $(build.artifactStagingDirectory)\$(buildConfiguration)\$(buildPlatform)\AppxPackages
    buildOutputDir : $(Build.SourcesDirectory)\BuildOutput
    publishDir : $(Build.ArtifactStagingDirectory)

  steps:
  - template: AzurePipelinesTemplates\MUX-BuildDevProject-Steps.yml

  - template: AzurePipelinesTemplates\MUX-PublishProjectOutput-Steps.yml

- job: RunTests
  dependsOn: Build
  condition:
    in(dependencies.Build.result, 'Succeeded', 'SucceededWithIssues', 'Skipped')
  pool:
    name: Package ES Lab E
  strategy:
    maxParallel: 10
    matrix:
      Release_x64:
        buildPlatform: 'x64'
        buildConfiguration: 'Release'

  steps:
  - task: PkgESSetupBuild@10
    displayName: 'XESSetupBuild'
    inputs:
      productName: dep.controls
      branchVersion: false
      nugetVer: true

  - task: DownloadBuildArtifacts@0 
    condition:
      eq(variables['useBuildOutputFromBuildId'],'')
    inputs: 
      artifactName: drop 
      downloadPath: '$(Build.ArtifactStagingDirectory)'

  - task: DownloadBuildArtifacts@0 
    condition:
      ne(variables['useBuildOutputFromBuildId'],'')
    inputs: 
      buildType: specific
      buildVersionToDownload: specific
      project: $(System.TeamProjectId)
      pipeline: $(System.DefinitionId)
      buildId: $(useBuildOutputFromBuildId)
      artifactName: drop 
      downloadPath: '$(Build.ArtifactStagingDirectory)'

  - task: 333b11bd-d341-40d9-afcf-b32d5ce6f23b@2
    condition:
      ne(variables['useBuildOutputFromBuildId'],'')
    displayName: 'NuGet restore MUXControls.sln'
    inputs:
      restoreSolution: $(Build.SourcesDirectory)\MUXControls.sln
      feedsToUse: config
      nugetConfigPath: $(Build.SourcesDirectory)\nuget.config

  - task: CmdLine@1
    displayName: 'Display build machine environment variables'
    inputs:
      filename: 'set'

  - script: cmd /c dir /s /b $(Build.ArtifactStagingDirectory)
    displayName: Dump artifact staging directory

  - task: CmdLine@1
    displayName: PkgGen.cmd x86 release
    inputs:
      filename: '$(Build.SourcesDirectory)\tools\PkgGen.cmd'
      arguments: 'x86 release'
    enabled: false

  - task: CmdLine@1
    displayName: PkgGen.cmd x64 release
    inputs:
      filename: '$(Build.SourcesDirectory)\tools\PkgGen.cmd'
      arguments: 'x64 release'

  - task: PkgESSpkgGeneration@10
    displayName: 'Run Atlas Tests'
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    inputs:
      PostBuildOnly: false
      TestExecutionMode: AtlasJobs
      UseUNCShare: true
      SpkgVariables: '_BINPLACEDIR=\data\test\bin'
      PkgXmlDirRoot: '$(Build.SourcesDirectory)\SpkgDefsDontUse'
      ConfigXmlRoot: '$(Build.SourcesDirectory)\build\TReXDefs'
